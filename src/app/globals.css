@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

/* Discard area-sizing variables (kept in sync with component) */
:root {
  --discard-x: 1rem;  /* distance from window edge to discard area */
  --discard-w: 8rem;  /* discard area width */
}

/* At xl and up, reserve horizontal space for the discard area:
   left padding = 2Ã—gap + discard width, so content begins with
   the same gap on both sides of the discard. */
@media (min-width: 1280px) {
  .with-discard-pad { padding-left: calc(var(--discard-x) * 2 + var(--discard-w)); }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* GB Annotation Styles */
.caret-ghost {
  opacity: .25;
}

.caret-active {
  opacity: 1;
  color: #f59e0b; /* yellow */
}

.caret-sibling {
  margin-left: 2px; /* closes ^ . ^ neatly */
}

.pill-correct {
  background: #ecfdf5;
  color: #065f46;
  border-radius: 8px;
  padding: .1rem .35rem;
}

.pill-possible {
  background: #fffbeb;
  color: #92400e;
  border-radius: 8px;
  padding: .1rem .35rem;
}

.pill-incorrect {
  background: #fef2f2;
  color: #991b1b;
  border-radius: 8px;
  padding: .1rem .35rem;
}

/* insertion dot (the suggested '.'/ '!' / '?') */
.insert-dot {
  color: #f59e0b;             /* match caret-active */
  font-weight: 700;
  line-height: 1;
  /* keep it compact like a token but with no pill background */
  padding: 0;
  margin: 0 2px;
}

.tokens .dot {
  margin-left: 2px;
}

/* CBM Flow Container - wraps to new lines */
.cbm-flow {
  display: flex;
  flex-wrap: wrap;    /* enables wrapping */
  gap: 8px;           /* keep the pill spacing */
  align-items: center;
}

/* CBM Paragraphs Container - stacks paragraphs vertically */
.cbm-paragraphs {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

/* Each paragraph is a horizontal row */
.cbm-paragraph {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  align-items: center;
}

/* Ensure caret pills never overlap the first glyph of following words */
.cbm-paragraph .caret-pill { isolation: isolate; }
.cbm-paragraph .word-pill  { isolation: isolate; position: relative; z-index: 1; }

/* Each item is an inline-sized chunk that doesn't stretch */
.cbm-flow > .cbm-cell,
.cbm-paragraph > .cbm-cell {
  display: inline-flex;
  align-items: center;
  flex: 0 0 auto;     /* don't grow or shrink */
}

/* Visible focus ring for a11y */
.is-focused {
  outline: 2px solid #f59e0b;      /* yellow ring */
  outline-offset: 2px;
  border-radius: 6px;
}

/* Terminal Group Styles */
.cbm.token.correct { 
  background: #e8fff0; 
  color: #16784e; 
  border-radius: 8px;
  padding: .1rem .35rem;
}

.cbm.token.possible { 
  background: #fff7e6; 
  color: #a15a00; 
  border-radius: 8px;
  padding: .1rem .35rem;
}

.cbm.token.incorrect { 
  background: #ffeaea; 
  color: #a11; 
  border-radius: 8px;
  padding: .1rem .35rem;
}

.cbm.caret.correct  { 
  color: #9ca3af; 
  opacity: 0.25;
}

.cbm.caret.possible { 
  color: #f59e0b;   /* yellow */
  opacity: 1;
}

.cbm.caret.incorrect{ 
  color: #ef4444; 
  opacity: 1;
}

.cbm.insert-dot { 
  font-weight: 700; 
  line-height: 1;
  padding: 0;
  margin: 0 2px;
}

.cbm.insert-dot.possible { 
  color: #f59e0b; 
}

.cbm.insert-dot.incorrect{ 
  color: #ef4444; 
}

.cbm.insert-dot.correct  { 
  color: #16784e; 
}

.is-selected { 
  outline: 2px solid currentColor; 
  outline-offset: 2px; 
  border-radius: 6px; 
}

/* State CSS Variables - Single source of truth for colors */
.state-ok    { --c: #22c55e; --bg: rgba(34,197,94,.12);  --fg: #065f46; }
.state-maybe { --c: #f59e0b; --bg: rgba(245,158,11,.12); --fg: #92400e; }
.state-bad   { --c: #ef4444; --bg: rgba(239,68,68,.12); --fg: #7f1d1d; }

/* Word tokens */
.token { 
  border: 2px solid var(--c, transparent); 
  background: var(--bg, transparent); 
  color: var(--fg, inherit); 
  cursor: pointer;
  border-radius: .6rem; 
  padding: .1rem .4rem;
  font-size: inherit;
  line-height: 1;
}

.token--word { 
  border-radius: .6rem; 
  padding: .1rem .4rem; 
}

/* Caret & dot inside a terminal group inherit the group's color and have no own borders */
.token--caret, .token--dot { 
  border: none; 
  background: transparent; 
  color: var(--fg, inherit); 
  cursor: inherit;
  padding: 0;
  margin: 0 2px;
}

.token--dot { 
  font-weight: 700; 
}

.token--newline {
  border: none;
  background: transparent;
  color: inherit;
  cursor: default;
  padding: 0;
  margin: 0;
}

/* Terminal group wraps ^ . ^ and draws one border */
.tg {
  display: inline-flex; 
  align-items: center; 
  gap: .22rem;
  border: 2px solid var(--c, transparent); 
  background: var(--bg, transparent);
  border-radius: .6rem; 
  padding: .08rem .32rem; 
  cursor: pointer;
}

.tg__inner { 
  pointer-events: none; 
}

/* Legacy compatibility - keep existing styles working */
.tg--ok { 
  --c: #22c55e; 
  border-color: var(--c); 
  background: rgba(34, 197, 94, .10); 
}

.tg--maybe { 
  --c: #f59e0b; 
  border-color: var(--c); 
  background: rgba(245, 158, 11, .10); 
}

.tg--bad { 
  --c: #ef4444; 
  border-color: var(--c); 
  background: rgba(239, 68, 68, .10); 
}

.linebreak { 
  height: .6rem; 
}

/* Animated tooltips using data-tip (slight delay + pop-in) */
.tt { position: relative; }

/* Base (hidden) state */
.tt[data-tip]::after {
  content: attr(data-tip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) scale(.96);
  transform-origin: bottom center;
  background: rgba(17, 24, 39, .92); /* slate-900 */
  color: #fff;
  font-size: 12px;
  line-height: 1;
  white-space: nowrap;
  padding: 4px 6px;
  border-radius: 4px;
  pointer-events: none;
  z-index: 50;
  opacity: 0;
  visibility: hidden;
  transition: opacity .12s ease-out, transform .12s cubic-bezier(.2,.8,.2,1);
  transition-delay: .08s; /* slight hover delay */
  will-change: opacity, transform;
}
.tt[data-tip]::before {
  content: '';
  position: absolute;
  bottom: calc(100% - 2px);
  left: 50%;
  transform: translateX(-50%) scale(.96);
  transform-origin: bottom center;
  border: 6px solid transparent;
  border-top-color: rgba(17, 24, 39, .92);
  opacity: 0;
  visibility: hidden;
  transition: opacity .12s ease-out, transform .12s cubic-bezier(.2,.8,.2,1);
  transition-delay: .08s; /* slight hover delay */
}

/* Visible state on hover/focus */
.tt[data-tip]:hover::after,
.tt[data-tip]:focus-visible::after {
  opacity: 1;
  visibility: visible;
  transform: translateX(-50%) scale(1);
}
.tt[data-tip]:hover::before,
.tt[data-tip]:focus-visible::before {
  opacity: 1;
  visibility: visible;
  transform: translateX(-50%) scale(1);
}
